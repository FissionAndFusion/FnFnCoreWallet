{
    "CMvBasicConfigOption": [
        {
            "name": "fTestNet",
            "type": "bool",
            "opt": "testnet",
            "default": false,
            "format": "-testnet",
            "desc": "Use the test network"
        },
        {
            "name": "fWallet",
            "type": "bool",
            "opt": "wallet",
            "default": true,
            "format": "-nowallet",
            "desc": "Launch server without wallet"
        },
        {
            "name": "fVersion",
            "type": "bool",
            "opt": "version",
            "default": false,
            "format": "-version",
            "desc": "Get multiverse version"
        },
        {
            "name": "fPurge",
            "type": "bool",
            "opt": "purge",
            "default": false,
            "format": "-purge",
            "desc": "Purge database and blockfile"
        }
    ],
    "CMvForkConfigOption": [
        {
            "name": "vFork",
            "type": "vector<string>",
            "opt": "addfork",
            "format": "-addfork=<forkid>",
            "desc": "Add a supported fork"
        },
        {
            "name": "vGroup",
            "type": "vector<string>",
            "opt": "addgroup",
            "format": "-addgroup=<forkid of group leader>",
            "desc": "Add a supported fork group"
        }
    ],
    "CMvMintConfigOption": [
        {
            "access": "protected",
            "name": "strAddressMPVss",
            "type": "string",
            "opt": "mpvssaddress",
            "format": "-mpvssaddress=<address>",
            "desc": "MPVSS address"
        },
        {
            "access": "protected",
            "name": "strKeyMPVss",
            "type": "string",
            "opt": "mpvsskey",
            "format": "-mpvsskey=<key>",
            "desc": "MPVSS key"
        },
        {
            "access": "protected",
            "name": "strAddressBlake512",
            "type": "string",
            "opt": "blake512address",
            "format": "-blake512address=<address>",
            "desc": "POW blake512 address"
        },
        {
            "access": "protected",
            "name": "strKeyBlake512",
            "type": "string",
            "opt": "blake512key",
            "format": "-blake512key=<key>",
            "desc": "POW blake512 key"
        }
    ],
    "CMvRPCBasicConfigOption": [
        {
            "access": "protected",
            "name": "nRPCPortInt",
            "type": "int",
            "opt": "rpcport",
            "default": 0,
            "format": "-rpcport=port",
            "desc": "Listen for JSON-RPC connections on <port> (default: 6812 or testnet: 6814))"
        },
        {
            "name": "strRPCUser",
            "type": "string",
            "opt": "rpcuser",
            "format": "-rpcuser=<user>",
            "desc": "<user> name for JSON-RPC connections"
        },
        {
            "name": "strRPCPass",
            "type": "string",
            "opt": "rpcpassword",
            "format": "-rpcpassword=<password>",
            "desc": "<password> for JSON-RPC connections"
        },
        {
            "name": "fRPCSSLEnable",
            "type": "bool",
            "opt": "rpcssl",
            "default": false,
            "format": "-rpcssl",
            "desc": "Use OpenSSL (https) for JSON-RPC connections or not (default false)"
        },
        {
            "name": "fRPCSSLVerify",
            "type": "bool",
            "opt": "rpcsslverify",
            "default": false,
            "format": "-norpcsslverify",
            "desc": "Verify SSL or not (default yes)"
        },
        {
            "name": "strRPCCAFile",
            "type": "string",
            "opt": "rpccafile",
            "default": "ca.crt",
            "format": "-rpccafile=<file.cert>",
            "desc": "SSL CA file name (default ca.crt)"
        },
        {
            "name": "strRPCCertFile",
            "type": "string",
            "opt": "rpccertfile",
            "default": "server.crt",
            "format": "-rpccertfile=<file.cert>",
            "desc": "Server certificate file (default: server.cert)"
        },
        {
            "name": "strRPCPKFile",
            "type": "string",
            "opt": "rpcpkfile",
            "default": "server.key",
            "format": "-rpcpkfile=<file.pem>",
            "desc": "Server private key (default: server.pem)"
        },
        {
            "name": "strRPCCiphers",
            "type": "string",
            "opt": "rpcciphers",
            "default": "TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH",
            "format": "-rpcciphers=<ciphers>",
            "desc": "Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)"
        }
    ],
    "CMvRPCClientConfigOption": [
        {
            "name": "strRPCConnect",
            "type": "string",
            "opt": "rpchost",
            "default": "127.0.0.1",
            "format": "-rpchost=<ip>",
            "desc": "Send commands to node running on <ip> (default: 127.0.0.1)"
        },
        {
            "name": "nRPCConnectTimeout",
            "type": "unsigned int",
            "opt": "rpctimeout",
            "default": "DEFAULT_RPC_CONNECT_TIMEOUT",
            "format": "-rpctimeout=<time>",
            "desc": "Connection timeout <time> seconds (default: 120)"
        }
    ],

    "CMvDbpServerConfigOption": [
        {
            "name": "nDbpMaxConnections",
            "type": "unsigned int",
            "opt": "dbpmaxconnections",
            "default": "DEFAULT_DBP_MAX_CONNECTIONS",
            "format": "-dbpmaxconnections=<num>",
            "desc": "Set dbp max connections to <num> (default: 20)"
        },
        {
            "name": "nDbpSessionTimeout",
            "type": "unsigned int",
            "opt": "dbpsessiontimeout",
            "default": "DEFAULT_DBP_SESSION_TIMEOUT",
            "format": "-dbpsessiontimeout=<num>",
            "desc": "Set max timeout to <num>  seconds (default: 60*5)"
        },
        {
            "name": "vDbpAllowIP",
            "type": "vector<string>",
            "opt": "dbpallowip",
            "format": "-dbpallowip=<ip>",
            "desc": "Allow DBP connections from specified <ip> address"
        }
    ],

    "CMvDbpClientConfigOption": [
        {
            "name": "strParentHost",
            "type": "string",
            "opt": "dbpparentnodeip",
            "default": "",
            "format": "-dbpparentnodeip=<ip>",
            "desc": "Set dbp parent node ip to <ip> for super node(default: empty)"
        },
        {
            "name": "strSupportForks",
            "type": "string",
            "opt": "supernodeforks",
            "default": "",
            "format": "-supernodeforks=<forkids>",
            "desc": "Set Support Fork List to <forkids> for super node(default: empty)"
        }
    ],

    "CMvRPCServerConfigOption": [
        {
            "name": "nRPCMaxConnections",
            "type": "unsigned int",
            "opt": "rpcmaxconnections",
            "default": "DEFAULT_RPC_MAX_CONNECTIONS",
            "format": "-rpcmaxconnections=<num>",
            "desc": "Set max connections to <num> (default: 5)"
        },
        {
            "name": "vRPCAllowIP",
            "type": "vector<string>",
            "opt": "rpcallowip",
            "format": "-rpcallowip=<ip>",
            "desc": "Allow JSON-RPC connections from specified <ip> address"
        }
    ],
    "CMvDbpBasicConfigOption": [
        {
            "access": "protected",
            "name": "nDbpPortInt",
            "type": "int",
            "opt": "dbpport",
            "default": 0,
            "format": "-dbpport=port",
            "desc": "Listen for DBP connections on <port> (default: 6815)"
        },
        {
            "name": "strDbpUser",
            "type": "string",
            "opt": "dbpuser",
            "format": "-dbpuser=<user>",
            "desc": "<user> name for DBP connections"
        },
        {
            "name": "strDbpPass",
            "type": "string",
            "opt": "dbppassword",
            "format": "-dbppassword=<password>",
            "desc": "<password> for DBP connections"
        },
        {
            "name": "fDbpSSLEnable",
            "type": "bool",
            "opt": "dbpssl",
            "default": false,
            "format": "-dbpssl",
            "desc": "Use OpenSSL (https) for DBP connections or not (default false)"
        },
        {
            "name": "fDbpSSLVerify",
            "type": "bool",
            "opt": "dbpsslverify",
            "default": false,
            "format": "-nodbpsslverify",
            "desc": "Verify SSL or not (default no)"
        },
        {
            "name": "strDbpCAFile",
            "type": "string",
            "opt": "dbpcafile",
            "default": "dbpca.crt",
            "format": "-dbpcafile=<file.cert>",
            "desc": "SSL CA file name (default dbpca.crt)"
        },
        {
            "name": "strDbpCertFile",
            "type": "string",
            "opt": "dbpcertfile",
            "default": "dbpserver.crt",
            "format": "-dbpcertfile=<file.cert>",
            "desc": "Server certificate file (default: dbpserver.cert)"
        },
        {
            "name": "strDbpPKFile",
            "type": "string",
            "opt": "dbppkfile",
            "default": "dbpserver.key",
            "format": "-dbppkfile=<file.pem>",
            "desc": "Server private key (default: dbpserver.pem)"
        },
        {
            "name": "strDbpCiphers",
            "type": "string",
            "opt": "dbpciphers",
            "default": "TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH",
            "format": "-dbpciphers=<ciphers>",
            "desc": "Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)"
        }
    ],
   
    "CMvStorageConfigOption": [
        {
            "name": "strDBHost",
            "type": "string",
            "opt": "dbhost",
            "default": "localhost",
            "format": "-dbhost=<host>",
            "desc": "Set mysql host (default: localhost)"
        },
        {
            "name": "strDBName",
            "type": "string",
            "opt": "dbname",
            "default": "multiverse",
            "format": "-dbname=<name>",
            "desc": "Set mysql database name (default: multiverse)"
        },
        {
            "name": "strDBUser",
            "type": "string",
            "opt": "dbuser",
            "default": "multiverse",
            "format": "-dbuser=<user>",
            "desc": "Set mysql user's name (default: multiverse)"
        },
        {
            "name": "strDBPass",
            "type": "string",
            "opt": "dbpass",
            "default": "multiverse",
            "format": "-dbpass=<pwd>",
            "desc": "Set mysql user's password (default: multiverse)"
        },
        {
            "name": "nDBPort",
            "type": "int",
            "opt": "dbport",
            "default": 0,
            "format": "-dbport=<n>",
            "desc": "Set mysql port (default: 0)"
        },
        {
            "name": "nDBConn",
            "type": "int",
            "opt": "dbconn",
            "default": "DEFAULT_DB_CONNECTION",
            "format": "-dbconn=<n>",
            "desc": "Set mysql connections count (default: 8)"
        }
    ],
    "CMvNetworkConfigOption": [
        {
            "name": "fListen",
            "type": "bool",
            "opt": "listen",
            "default": false,
            "format": "-listen",
            "desc": "Accept connections from outside (default: 0)"
        },
        {
            "name": "fBloom",
            "type": "bool",
            "opt": "bloom",
            "default": true,
            "format": "-nobloom",
            "desc": ""
        },
        {
            "name": "nPortInt",
            "type": "int",
            "opt": "port",
            "default": 0,
            "format": "-port=<port>",
            "desc": "Listen for connections on <port> (default: 6811 or testnet: 6813)"
        },
        {
            "name": "nMaxConnection",
            "type": "int",
            "opt": "maxconnections",
            "default": "DEFAULT_MAX_OUTBOUNDS + DEFAULT_MAX_INBOUNDS",
            "format": "-maxconnections=<n>",
            "desc": "Maintain at most <n> connections to peers (default: 125)"
        },
        {
            "name": "nConnectTimeout",
            "type": "unsigned int",
            "opt": "timeout",
            "default": "DEFAULT_CONNECT_TIMEOUT",
            "format": "-timeout=<n>",
            "desc": "Specify connection timeout (in milliseconds)"
        },
        {
            "name": "vNode",
            "type": "vector<string>",
            "opt": "addnode",
            "format": "-addnode=<ip>",
            "desc": "Add a node to connect to and attempt to keep the connection open"
        },
        {
            "name": "vConnectTo",
            "type": "vector<string>",
            "opt": "connect",
            "format": "-connect=<ip>",
            "desc": "Connect only to the specified node"
        },
        {
            "name": "nDNSeedPort",
            "type": "int",
            "opt": "dnseedport",
            "default": "DEFAULT_DNSEED_PORT",
            "format": "-dnseedport=<port>",
            "desc": "Listen for dnseed connections on <port> (default: 6816)"
        },
        {
            "name": "nMaxTimes2ConnectFail",
            "type": "unsigned int",
            "opt": "dnseedmaxtimes",
            "default": "DNSEED_DEFAULT_MAX_TIMES_CONNECT_FAIL",
            "format": "-dnseedmaxtimes=<times>",
            "desc": "Max <times> dnseed attempt to connect node"
        },
        {
            "name": "strTrustAddress",
            "type": "string",
            "opt": "confidentAddress",
            "format": "-confidentAddress=<address>",
            "desc": "Trust node address"
        }
    ]
}
