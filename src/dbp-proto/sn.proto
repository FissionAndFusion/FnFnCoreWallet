syntax = "proto3";

package sn;

message ForkID 
{
    repeated string ids = 1;
}

message SysCmd 
{
	string id = 1; //随机字符串
	bytes forkid = 2;
	int32 cmd = 3;
	repeated string arg = 4;
}

message TxCmd
{
	string id = 1; //随机字符串
	bytes forkid = 2; //分支id
	bytes hash = 3; //tx hashid
}

message BlockCmd
{
	string id = 1;  //随机字符串
	bytes forkid = 2; //分支id
	bytes hash = 3; //区块hash id
}

message Transaction 
{
    uint32 nVersion = 1; //版本号,目前交易版本为 0x0001
    uint32 nType = 2; //类型, 区分公钥地址交易、模板地址交易、即时业务交易和跨分支交易
    uint32 nLockUntil = 3; //交易冻结至高度为 nLockUntil 区块
    bytes hashAnchor = 4; //交易有效起始区块 HASH
    message CTxIn
    {
        bytes hash = 1;
        uint32 n = 2;
    }
    repeated CTxIn vInput = 5; //前序交易输出列表,包含前序交易 ID 和输出点序号
    message CDestination
    {
        enum PREFIX
        {
            PREFIX_NULL = 0;
            PREFIX_PUBKEY = 1;
            PREFIX_TEMPLATE = 2;
            //PREFIX_MAX = 3;
        }
        uint32 prefix = 1;
        bytes data = 2;
        uint32 size = 3; //设置为33
    }
    CDestination cDestination = 6; //输出地址
    int64 nAmount = 7; //输出金额
    int64 nTxFee = 8; //网络交易费 
    bytes vchData = 9; //输出参数(模板地址参数、跨分支交易共轭交易)
    bytes vchSig = 10; //交易签名
    bytes hash = 11; //当前tx hash
    bytes fork = 12; // 当前tx的 forkid
}

message Block
{
    uint32 nVersion = 1; //版本号，目前区块版本为 0x0001
    uint32 nType = 2; // 类型,区分创世纪块、主链区块、业务区块和业务子区块
    uint32  nTimeStamp = 3; //时间戳，采用UTC秒单位
    bytes hashPrev = 4; //前一区块的hash
    bytes hashMerkle = 5; //Merkle tree的根
    bytes vchProof = 6;  //用于校验共识合法性数据
    Transaction txMint = 7; // 出块奖励交易
    repeated Transaction vtx = 8; //区块打包的所有交易
    bytes vchSig = 9; //区块签名
    uint32 nHeight = 10; //区块高度
    bytes hash = 11; //当前区块hash
    bytes fork = 12; // 当前区块的fork
}

message SendBlockArg 
{
    string id = 1; //DPOS生成的随机数
    Block block = 2;
}

message SendBlockNoticeArg 
{
	bytes forkid = 1; //出块分支
	string height = 2; //块高度
	bytes hash = 3; //块hashid
}

message SendBlockNoticeRet 
{
	bytes hash = 1; //块hashid
}

message SendBlockRet
{
    bytes hash = 1;
}

message SendTxArg
{
    string id = 1; //DPOS生成的随机数
    Transaction tx = 2;
}

message SendTxNoticeArg 
{
	bytes forkid = 1; //tx分支
	bytes hash = 2; //tx的hashid
}

message SendTxRet
{
    bytes hash = 1;
}

message SendTxNoticeRet
{
	bytes hash = 1; //tx的hashid
}

message RegisterForkIDArg 
{
    bytes forkid = 1;
}

message RegisterForkIDRet
{
    bytes forkid = 1;
}

message UpdateForkStateArg
{
    bytes forkid = 1;              // 分支ID
    string currentHeight = 2;  //  当前分支高度
    bytes lastBlockHash = 3;        // 最后一个块的Hash
}

message UpdateForkStateRet
{
    bytes forkid = 1; 
}

message GetBlocksArg
{
    bytes forkid = 1; // 要关联的fork
    bytes hash = 2; //起始块hash
    int32 number = 3; //将要获取的最大块数
}

message GetBlocksRet
{
    bytes hash = 1;
}